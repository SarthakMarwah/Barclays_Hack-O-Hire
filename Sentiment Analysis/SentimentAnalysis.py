# -*- coding: utf-8 -*-
"""Untitled19.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wa5onSLjZ2UN89WpZ-6paHQJ2zsASFBG
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install vaderSentiment

# import SentimentIntensityAnalyzer class
# from vaderSentiment.vaderSentiment module.
from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer

# function to print sentiments
# of the sentence.
def sentiment_scores(sentence):

	# Create a SentimentIntensityAnalyzer object.
	sid_obj = SentimentIntensityAnalyzer()

	# polarity_scores method of SentimentIntensityAnalyzer
	# object gives a sentiment dictionary.
	# which contains pos, neg, neu, and compound scores.
	sentiment_dict = sid_obj.polarity_scores(sentence)

	print("Overall sentiment dictionary is : ", sentiment_dict)
	print("sentence was rated as ", sentiment_dict['neg']*100, "% Negative")
	print("sentence was rated as ", sentiment_dict['neu']*100, "% Neutral")
	print("sentence was rated as ", sentiment_dict['pos']*100, "% Positive")

	print("Sentence Overall Rated As", end = " ")

	# decide sentiment as positive, negative and neutral
	if sentiment_dict['compound'] >= 0.05 :
		print("Positive")
		return "Positive"  # Return label

	elif sentiment_dict['compound'] <= - 0.05 :
		print("Negative")
		return "Negative"  # Return label

	else :
		print("Neutral")
		return "Neutral"  # Return label


# Predict sentiments for sentences in sa_dataset
def predict_sentiments(sa_dataset):
    labels = []
    for sentence in sa_dataset:
        label = sentiment_scores(sentence)
        labels.append(label)
    return labels


# Driver code
if __name__ == "__main__" :

	# Provided sentiment analysis dataset
	sa_dataset = [
    "You should definitely go for this AAPL stock",
    "Drop the money on Dow Jones",
    "The stock market can go in any direction today",
    "I'm feeling bullish on NVDA",
    "It's risky to hold onto GOOG",
    "The stock market can go in any direction today",
    "Risk starts from FB",
    "I heard good things about AAPL recently",
    "The Dow Jones Industrial Average seems promising",
    "Expect volatility in the market this week",
    "I'm skeptical about investing in AMZN right now",
    "The S&P 500 index is showing strong performance",
    "The market sentiment is uncertain at the moment",
    "There are rumors of a potential downturn in tech stocks",
    "I'm optimistic about MSFT's future prospects",
    "The stock market outlook is unclear",
    "Consider adding some diversity with healthcare stocks",
    "I'm cautious about the current market conditions",
    "The NASDAQ Composite Index hit a new high",
    "The financial markets are unpredictable these days",
    "I'm hearing mixed opinions about GOOGL"
]


	# Predict sentiments for the provided dataset
	predicted_labels = predict_sentiments(sa_dataset)
	print("\nPredicted Labels:", predicted_labels)